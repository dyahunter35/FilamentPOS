<?php

namespace App\Filament\Resources\OrderResource\Pages;

use App\Filament\Resources\OrderResource;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Database\Eloquent\Model;

class CreateOrder extends CreateRecord
{
    protected static string $resource = OrderResource::class;

    // We will override this method to take full control
   /*  protected function handleRecordCreation(array $data): Model
    {
        // الخطوة الأولى: اعرض البيانات كما هي قادمة من الفورم مباشرة
        // هل تحتوي على 'is_guest' و 'customer_id' أو 'guest_customer'؟
        // dd('Data from form:', $data);

        // --- إذا كانت البيانات في الخطوة الأولى تبدو صحيحة، انتقل للخطوة الثانية ---

        // الخطوة الثانية: قم بتطبيق نفس المنطق الذي كان في mutateFormDataBeforeCreate

        $data['branch_id'] = filament()->getTenant()->id;
        if (isset($data['is_guest'])) {
            if ($data['is_guest'] === false) {
                $data['guest_customer'] = null;
            } else {
                $data['customer_id'] = null;
            }
            unset($data['is_guest']);
        }

        // اعرض البيانات بعد تعديلها وقبل حفظها
        //dd('Data before saving:', $data);

        // --- إذا كانت البيانات في الخطوة الثانية تبدو صحيحة، انتقل للخطوة الثالثة ---

        // الخطوة الثالثة: حاول إنشاء السجل في قاعدة البيانات
        $record = static::getModel()::create($data);

        // اعرض السجل بعد محاولة الحفظ. هل حصل على ID؟
        dd('Record after create attempt:', $record->refresh());

        return $record;
    }
 */
     protected function mutateFormDataBeforeCreate(array $data): array
    {
        //dd($data);
        $data['caused_by'] = auth()->id();
        // If the order is for a registered customer...
        if ($data['is_guest'] === false) {
            // ...ensure the guest_customer field is null.
            $data['guest_customer'] = null;
        } else {
            // Otherwise, if it's a guest, ensure customer_id is null.
            $data['customer_id'] = null;
        }

        // Remove our virtual 'is_guest' field so Filament doesn't try to save it.
        unset($data['is_guest']);

        return $data; // TODO: Change the autogenerated stub
    }

    public function afterCreate()
    {
        //$data = [];
        /* $data['discount'] = collect($this->getRecord()->items)->sum(function ($item) {
            return $item->discount * $item->qty;
        }); */

        //$data['total'] = collect($this->getRecord()->items)->sum('sub_total');

        //$this->getRecord()->update($data);

        $this->getRecord()->orderLogs()->create([
            'log' => "Invoice created By: " . auth()->user()->name,
            'type' => 'created'
        ]);
    }
}
